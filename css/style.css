@import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css);
@import url(./fontello.css);
@import url(./normalize.css);

/* 숨김 콘텐츠 */
.a11y-hidden{
    background-color: red;
    /* display: none; ---> 이렇게 접근도 못하게 보이지 않게 없애면 안됌!!! 이건 아예 존재하지 않는거! 그래서 숨김 콘텐츠를 만들때는 이렇게가 아니라 아래와 같이!*/
    position: absolute;
    /* 안녕히계세요! 저는 안드로메다로 갑니다!!! 존재는 하지만 눈에는 안보일거에요! */
    top: -9999px;
    /* width와 height의 값을 주기는 해서.. 기본적으로 블록을 만들어 놓고... */
    width: 1px;
    height: 1px;
    /* 마진은 패딩과 다르게 음수값을 줄 수 있다는 것! */
    margin: -1px; 
    /* 음수값으로 마진을 준 것을 overflow를 사용해서 이 부분을 읽어준다... 즉, 이렇게 숨김 처림 된 이 부분을 스크린리더가 보여줄 때 갑자기 스크롤이 완전 위쪽으로 솓는 것을 방지하기 위해... 이렇게 해주는 것! */
    overflow: hidden;
    /* 트릭을 이용하는 것! cf. https://bennettfeely.com/clippy/   ---> 모든 좌표를 전부 0으로 잡아줘서...이런 특성을 이용하여서 좌표는 그곳에 있지만 우리 눈에는 안보이는 숨김 컨텐츠를 만들어 낸것~ */
    clip-path: polygon(0 0, 0 0, 0 0);
    /* 밑에있는 거는 앞으로의 버전에서는 사용하지 말라고는 하지만... 만약 하위 호환성을 보장하고 싶을때 위에 있는 코드랑 같이 사용함!  */
    /* cf. https://mulder21c.github.io/2019/03/22/screen-hide-text/ ---> 참고용!! */
    clip: rect(0 0 0 0);
}

/* 스타일 초기화 - 아래와 같이... 자주 사용하게 될, 중복으로 사용하게 될 리셋 모듈을 내가 만들어 놓는 것! 적용하고 싶으면 적용을 원하는 html상의 태그로 가서 class에 적으면 됨!!!*/
.reset-list{
    list-style: none;
    margin: 0;
    padding-left: 0;
}
html{
    font-size: 10px;
}
body{
    background-color: #ccc;
    font-size: 1.2rem;
    font-weight: 300;
    font-family: 'Spoqa Han Sans Neo', 'sans-serif';
}
body *, body *::before, body *::after{
    box-sizing: border-box;
}

/* 링크 스타일 */
a{
    text-decoration: none;
    /* 기본적으로 a 태그는 #00f처리 되어있기 때문에 기본칼라인 블랙으로 그냥 상속받게끔 한 것! */
    color: inherit;
}
.header, .visual, .main, .slogan, .footer-content{
    width: 940px;
    margin: 0 auto;
}

/* 헤더 */
.header{
    background-color: #fff;
    /* border-top: 1px solid transparent; */
    position: relative;
    padding: 0 30px 35px;
    border-radius: 0 0 15px 15px;
}
/* 로고 */
.logo{
    margin: 0; 
    position: absolute;
    top: 33px;
    left: 65px;
    font-size: 1em;
    /* font-size: 100%;  위에꺼랑 같은 말! */
    line-height: 1;
}
/* 안내 링크 */
.member{
    margin: 0;
    list-style: none;
    /* 기본 패딩 없애기... */
    padding-left: 0; 
    /* 인라인 블록으로 만든 멤버 클래스의 li를 right 정렬해주고 싶으면 그의 부모 요소에 text-align을 바꿔주는 것~! */
    text-align: right;
    /* li들 태그 사이에 공백문자로   */
    font-size: 0;
    padding: 5px 0;
    position: relative;
    right: -10px;
}
.member li{
    display: inline-block;
    /* 루트인 html을 수정하면 같이 바뀔 수 있게 rem을 사용! px은 지양! */
    font-size: 1.2rem;
}
.member a{
    /* 원래 a는 inline 속성. 그래서 패딩을 위아래 줘도 메인이 같이 늘어나지 않는다. 그래서 블록으로 성격을 바꿔서 메인도 같이 늘어나게 해주자! */
    display: inline-block;
    /* background-color: pink; */
    /* 왜 굳이 패딩? .devider에 마진을 줘도 되구, 그냥 margin을 줘도 되는데? 왜냐면 ux(사용자의-)관점에서. 딱 그 글자를 클릭하지 않아도 그 근처를 선택하면 클릭이 될 수 있게끔~! */
    padding: 5px 10px;
    /*  소문자로 입력했던 english를 대문자로 바꿔서 렌더링을 해주기 위해... 아래와 같이! */
    text-transform: uppercase;
}
.divider{
    margin: 0 3px;
}

/* 메인 메뉴 */
.menu{
    /* background: linear-gradient(to bottom, red, green); */
    /*  가능하다면 ce4827라는 배경색을 기본적으로 깔아서 ... Linear-gradient가 제대로 작동하지 않을 때 보여줄 배경색을 깔아논다! */
    background: #ce4827 linear-gradient(to bottom, #eaac2e 0%,#ce4827 35%,#ce4827 70%,#eaac2e 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    border-top: 2px solid #000;
    /* box-shadow: ; 로도 같은 것을 만들 수 있다고 함! 상자 사이즈에 영향을 주지도 않는다고 함! */
    /* box-shadow: 0 -2px 0 0 #000; */
    border-radius: 0 0 5px 5px;
    /* /를 기준으로 앞에쪽이 x축이고 뒤쪽인 y축! 완만한 경사를 만들고 싶을 때 사용! */
    /* border-radius: 0 0 30px 30px / 0 0 5px 5px; */
    height: 47px;
    padding-left: 255px;
}
.menu a{
    outline: 0;
}
.menu-item{
    position: relative;
    float: left;
    border-left: 1px solid #fff;
}
.menu-item-button{
    color: #fff;
    font-size: 1.6rem;
    font-weight: 700;
    /* shadow는 두겹으로 준 것! 그렇게 윤곽을 만든 것! */
    text-shadow: 1px 1px 0 #000, -1px -1px 0 #000;
    /* 원래 a 태그는 인라인 요소인데 이걸 성격을 블록으로 바꾸고 또 패딩도 넣어줌으로써 마우스를 호버했을 떄 바로 클릭할 수 있게끔 하는 영역을 더 크게 setting해준다. */
    display: block;
    padding: 2px 20px 0;
    line-height: 45px;
}
/* 동적 클래스 - 어떤 이벤트가 발생하였을 때 색깔이 바뀌려면 그 글꼴 색을 원래 먹였던 요소를 바꿔줄 것! */
.menu-act .menu-item-button{
    color: #ff0;
    /* border-bottom: 2px solid #000; */
}
.menu-act .menu-item-button::after{
    content: "";
    display: block;
    /* 메뉴에 커서를 올렸을 때, 글자수만큼 밑줄이 그려지려면... 아래와 같은 트릭!  */
    background-color: #000;
    height: 2px;
    margin-top: -2px;
}
/* .menu-item:first-child{
    margin-left: 225px;
} */
.sub-menu{
    position: absolute;
    /* 일단 헷갈릴때 안보이게 해놓기! 임시 코드임! */
    display: none;
    top: 47px;
    white-space: nowrap;
    /* width: max-content;  ---> 이건 그냥 내가 찾아낸거~ 위에 꺼는 강사님의 비법~!*/
}
.menu-act .sub-menu{
    display: block;
}
.sub-menu1, .sub-menu2, .sub-menu3{
    /* display: none; */
    left: 0;
}
.sub-menu4, .sub-menu5, .sub-menu6{
    /* display: none; */
    right: 0;
}
.sub-menu li{
    display: inline-block;
}
.sub-menu a{
    display: inline-block;
    padding: 10px 0 8px;
    margin-right: 5px;
}
/* .sub-menu a::before{
    content: '\f192'; 
    font-family: 'fontello';
    font-weight: normal;
    display: inline-block;
    text-decoration: inherit;
    width: 1em;
    margin-right: .2em;
    text-align: center;
} */

/* .sub-menu a:hover::before, .sub-menu a:focus::before{  --> 하지만 멀티 이벤트는 css가 처리하지 못해서 이거는 자바스크립트로 하는 것이 옳다!*/
/*    content: '\e800';
} */
.sub-menu a:hover, .sub-menu a:focus{
    color: #f00;
}

/* 비주얼 애니메이션 */
@keyframes textAni{
    from{
        font-size: 12px;
        color: rgba(0, 0, 0, 0);
        /* margin으로 하면 레이아웃도 같이 무너지는 것을 확인할 수 있다!  */
        /* padding: 0; */
        /* 두번째 방법 */
        /* position: absolute; */
        /* top: 0; */
        /* left: 0; */
        /* 세번째 방법 */
        transform: translate(0, 0);
    }
    to{
        font-size: 24px;
        color: rgba(0, 0, 0, 1);
        /* 두번째 방법 */
        /* padding: 75px 0 0 400px; */
        /* top: 75px; */
        /* left: 400px; */
        /* 세번째 방법 */
        transform: translate(400px, 75px);
    }
}
@keyframes bgAni{
    0%{
        opacity: 1;
    }
    100%{
        opacity: 0;
    }
}
.visual{
    /* background-color: salmon; */
    height: 120px;
    position: relative;
}
.visual::before, .visual::after{
    /* 투명한 상자가 두개가 겹쳐있는 형태니까 아래와 같이 적어도 아무것도 안보이는게 정상! */
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    animation-name: bgAni;
    animation-duration: 2000ms;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}
.visual::before{
    /* 여러개의 배경이미지를 삽입할 수 있다! 콤마로 계속 add하기! 백그라운드 이미지랑 포지션으로 따로 해줘도 되구... 그냥 나란히 나열해도 되구,,,*/
    background-image: url(./images/ani_flower_01.png), url(./images/ani_flower_02.png);
    background-position: 0 -10px, 670px 0;
}
.visual::after{
    /* background: url(./images/ani_flower_03.png) no-repeat 300px 0,
    url(./images/ani_flower_04.png) no-repeat 800px 0; */
    background-image: url(./images/ani_flower_03.png), url(./images/ani_flower_04.png);
    background-position: 300px 0, 800px 0;
    animation-delay: 1000ms;
}
.visual-text{
    /* 폰트도 바꿔주는 센스! */
    font-family: Georgia, 'Times New Roman', Times, serif;
    /* 애니메이션은 아래와 같은 2가지의 속성이 무조건 필요! 애니메이션 이름이랑 2초간 동작하라는 듀레이션! */
    animation-name: textAni;
    animation-duration: 1000ms;
    animation-fill-mode: forwards;
    /* scroll이 가로로 생기는 것을 막기 위해...아래와 같이 해도됨! ^^  */
    /* display: inline-block; */
    position: absolute;
    z-index: 10;
}
.main{
    background-color: blue;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 30px;
}
.group{
height: 60vh;
}
.group1{
background-color: violet;
width: 250px;
}
.group2{
background-color: aqua;
width: 380px;
}
.group3{
background-color: sandybrown;
width: 190px;
}
.slogan{
background-color: lightgreen;
height: 10vh;
}

.footer{
background-color: silver;
}
.footer-content{
background-color: pink;
height: 10vh;
}